version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: rcc_db
    environment:
      POSTGRES_DB: reporter
      POSTGRES_USER: reporter
      POSTGRES_PASSWORD: reporter
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reporter"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rcc_backend
    environment:
      PORT: 8000
      JWT_SECRET: dev-secret-change-me
      # Restrinja em prod ao domínio do frontend
      CORS_ALLOWED_ORIGINS: http://localhost:8080,http://127.0.0.1:8080
      # Placeholders para futura persistência
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: reporter
      DB_USER: reporter
      DB_PASSWORD: reporter
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ../reporter-command-center
      dockerfile: Dockerfile
      args:
        # URL acessível pelo navegador do host
        VITE_API_BASE_URL: http://localhost:8000
        VITE_DEFAULT_TENANT_ID: org-1
    container_name: rcc_frontend
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_started

volumes:
  pgdata:

